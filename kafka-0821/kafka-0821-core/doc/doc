kafka的消费者消费消息的三种机制：

1：at most once: 最多一次,这个和JMS中"非持久化"消息类似.发送一次,无论成败,将不会重发.
2：at least once: 消息至少发送一次,如果消息未能接受成功,可能会重发,直到接收成功.
3：exactly once: 消息只会发送一次.

at most once: 
消费者fetch消息,然后保存offset,然后处理消息;当client保存offset之后,但是在消息处理过程中出现了异常,
导致部分消息未能继续处理.那么此后"未处理"的消息将不能被fetch到,这就是"at most once".

at least once: 
消费者fetch消息,然后处理消息,然后保存offset.如果消息处理成功之后,
但是在保存offset阶段zookeeper异常导致保存操作未能执行成功,这就导致接下来再次fetch时可能获得上次已经处理过的消息,
这就是"at least once"，原因offset没有及时的提交给zookeeper，zookeeper恢复正常还是之前offset状态.

exactly once: kafka中并没有严格的去实现(基于2阶段提交,事务),我们认为这种策略在kafka中是没有必要的.

注：通常情况下"at-least-once"是我们首选.(相比at most once而言,重复接收数据总比丢失数据要好).



javaapi      --提供java的producer和consumer接口api

1：启动breaker
  配置：  args(0) = "../config/server-1.properties"
  
2： 

















  
  
